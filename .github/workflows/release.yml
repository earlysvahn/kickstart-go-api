name: Build and Release Binaries

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [darwin, linux, windows]
        goarch: [amd64]

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.2

    - name: Configure Git for GitHub Actions
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions Bot"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Create a tag (if needed)
      if: github.event_name == 'workflow_dispatch'
      run: |
        TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        if [ -z "$TAG" ]; then
          NEW_TAG="v1.0.0"
        else
          NEW_TAG=$(echo $TAG | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        fi
        git tag $NEW_TAG
        git push origin $NEW_TAG

    - name: Build binary
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o kickstart-go-api-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload release asset
      uses: actions/upload-artifact@v3
      with:
        name: kickstart-go-api-${{ matrix.goos }}-${{ matrix.goarch }}
        path: kickstart-go-api-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download release assets
      uses: actions/download-artifact@v3

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        files: |
          kickstart-go-api-darwin-amd64
          kickstart-go-api-linux-amd64
          kickstart-go-api-windows-amd64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
